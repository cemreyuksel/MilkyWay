{"version":3,"sources":["viewLayer/assets/logo.svg","viewLayer/components/NavBar/index.js","viewLayer/hooks/index.js","dataLayer/env/index.js","viewLayer/components/Universes/index.js","viewLayer/components/Star/index.js","viewLayer/components/Stars/index.js","viewLayer/components/Imprint/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","variant","Container","Nav","className","Link","href","src","logo","width","height","alt","useFetch","url","useState","data","setData","loading","setLoading","useEffect","a","fetch","response","json","fetchUrl","BASE_URL","UNIVERSE_URL","STARS_URL","LOADING_MESSAGE","Universes","map","index","maxSize","name","Card","style","Body","Title","Header","cardMap","RED","BLUE","GREEN","YELLOW","BLACK","getUniverseName","universes","universeId","find","universe","id","Star","color","Stars","stars","starItems","Imprint","div","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9a64ce4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bd953574.svg\";","import { Navbar, Container, Nav } from 'react-bootstrap';\nimport logo from '../../assets/logo.svg';\n\nconst NavBar = () => (\n  <Navbar bg=\"dark\" variant=\"dark\">\n    <Container>\n      <Nav className=\"me-auto\">\n        <Nav.Link href=\"/stars\">Stars</Nav.Link>\n        <Nav.Link href=\"/universes\">Universes</Nav.Link>\n        <Nav.Link href=\"/imprint\">Imprint</Nav.Link>\n      </Nav>\n      <Nav.Link href=\"/\">\n        <img\n          src={logo}\n          width=\"50\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n          alt=\"\"\n        />\n      </Nav.Link>\n    </Container>\n  </Navbar>\n);\n\nexport default NavBar;\n","import { useState, useEffect } from 'react';\n\nexport const useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchUrl() {\n      const response = await fetch(url);\n      const json = await response.json();\n      setData(json);\n      setLoading(false);\n    }\n\n    fetchUrl();\n  }, [url]);\n  return [data, loading];\n};\n","const BASE_URL = 'http://localhost:1234';\n\nexport const UNIVERSE_URL = `${BASE_URL}/universes`;\nexport const STARS_URL = `${BASE_URL}/stars`;;\n\nexport const LOADING_MESSAGE = 'Loading...';\n","import React from 'react';\n\nimport { Card } from 'react-bootstrap';\n\nimport { useFetch } from '../../hooks';\nimport { UNIVERSE_URL, LOADING_MESSAGE } from '../../../dataLayer/env';\n\nimport './style.scss';\n\nconst Universes = () => {\n  const [data, loading] = useFetch(UNIVERSE_URL);\n\n  return (\n    <>\n      {loading ? (\n        <h2>{`${LOADING_MESSAGE}`}</h2>\n      ) : (\n        <div className=\"universe-items\">\n          {data.map(({ maxSize, name }, index) => (\n            <div key={index}>\n              <Card\n                bg={'Info'}\n                style={{ width: '20rem' }}\n                className=\"text-center\"\n              >\n                <Card.Body>\n                  <Card.Title> {name}</Card.Title>\n                  <Card.Header>Max Size: {maxSize}</Card.Header>\n                </Card.Body>\n              </Card>\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Universes;\n","import React from 'react';\n\nimport { Card } from 'react-bootstrap';\n\nimport { useFetch } from '../../hooks';\nimport { UNIVERSE_URL, LOADING_MESSAGE } from '../../../dataLayer/env';\n\nconst cardMap = {\n  RED: 'danger',\n  BLUE: 'primary',\n  GREEN: 'success',\n  YELLOW: 'warning',\n  BLACK: 'dark',\n};\n\nconst getUniverseName = (universes, universeId) => {\n  const { name } = universes.find((universe) => universe.id === universeId);\n  return name;\n};\n\nconst Star = ({ name, color, universeId }) => {\n  const [data, loading] = useFetch(UNIVERSE_URL);\n  return (\n    <>\n      {loading ? (\n        <h2>{`${LOADING_MESSAGE}`}</h2>\n      ) : (\n        <Card\n          bg={`${cardMap[color]}`}\n          style={{ width: '20rem' }}\n          className=\"text-center\"\n        >\n          <Card.Body>\n            <Card.Title> {name}</Card.Title>\n            <Card.Header>\n              Universe: {getUniverseName(data, universeId)}\n            </Card.Header>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default Star;","import React from 'react';\n\nimport Star from '../Star';\n\nimport { useFetch } from '../../hooks';\nimport { STARS_URL, LOADING_MESSAGE } from '../../../dataLayer/env';\n\nimport './style.scss';\n\nconst Stars = () => {\n  const [stars, loading] = useFetch(STARS_URL);\n\n  const starItems = stars.map(({ name, color, universeId }, index) => (\n    <Star key={index} name={name} color={color} universeId={universeId} />\n  ));\n\n  return (\n    <>\n      {loading ? (\n        <h2>{`${LOADING_MESSAGE}`}</h2>\n      ) : (\n        <div className=\"star-items\">{starItems}</div>\n      )}\n    </>\n  );\n};\n\nexport default Stars;\n","import React from 'react';\n\nconst Imprint = () => <h2 div=\"imprint-header\">Imprint</h2>;\n\nexport default Imprint;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport NavBar from './viewLayer/components/NavBar';\nimport Universes from '../src/viewLayer/components/Universes';\nimport Stars from '../src/viewLayer/components/Stars';\nimport Imprint from '../src/viewLayer/components/Imprint';\n\nexport default function App() {\n  return (\n    <Router>\n      <NavBar/>\n        <Switch>\n          <Route path=\"/universes\" component={Universes}/>\n          <Route path=\"/stars\" component={Stars}/>\n          <Route path=\"/imprint\" component={Imprint}/>\n        </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}